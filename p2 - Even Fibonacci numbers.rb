=begin
============================
    Problem #2
    Even Fibonacci numbers
============================


Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
=end


# See with console at repl.it
# https://repl.it/FBlZ/1

=begin
============================
    Problem #2
    Even Fibonacci numbers
============================


Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
=end

MAX = 10
sum = 0
fib_numbers = [1,2]


for a in 2...MAX do
  fib_last = fib_numbers[fib_numbers.length - 1]
  fib_2nd_last = fib_numbers[fib_numbers.length - 2]

  next_number = fib_last + fib_2nd_last
  fib_numbers.push(next_number)
end


fib_numbers.each do |num|
  if num % 2 == 0
    sum += num
  end
end

puts "The sum of all even Fibnacci numbers between 0 and #{MAX}: #{sum}"
